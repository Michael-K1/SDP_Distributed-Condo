syntax="proto3";

package Complex;

option java_package="mk1.sdp.GRPC";
option java_outer_classname="PeerMessages";

message Measure{
    int32 senderID=1;
    int64 timeStamp=2;
    double measurement=3;
}

message RequestBoost{
    int32 requestor=1;
    int32 lamportTimestamp=2;
}
message Coordinator{
    int32 coordinatorID=1;
    int32 sender=2;
}

message Ack{
    bool ack=1;
    string message=2;
    int32 coordinator=3;
    int32 lamportTimestamp=4;
    int32 sender=5;
}

message SelfIntroduction{   //if the house comes later on needs to be added to the list of other houses
    int32 id=1;
    string address=2;
    int32 port=3;
}

service HouseManagement{
    rpc AddHome(SelfIntroduction) returns(Ack){}
    rpc removeHome(SelfIntroduction) returns (Ack){}

    rpc sendMeasure(Measure) returns (Ack){}
    rpc sendGlobalMean(Measure) returns (Ack){}

    rpc election(Coordinator) returns(Ack){}
    rpc newCoordinator(Coordinator) returns (Ack){}

    rpc boostRequest(RequestBoost)returns (Ack){}
}